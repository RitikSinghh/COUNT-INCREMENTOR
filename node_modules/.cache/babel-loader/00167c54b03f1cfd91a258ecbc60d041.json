{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ritik\\\\awesomeapp\\\\src\\\\Slotmach.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SlotM = props => {\n  let {\n    x,\n    y,\n    z\n  } = props;\n\n  if (x === y && y === z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, \" \", y, \" \", z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"THIS IS MATCHING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 15\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, \" \", y, \" \", z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"THIS IS NOT MATCHING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_c = SlotM;\nexport default SlotM;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlotM\");","map":{"version":3,"names":["React","SlotM","props","x","y","z"],"sources":["C:/Users/ritik/awesomeapp/src/Slotmach.jsx"],"sourcesContent":["import React from 'react';\r\n  const SlotM=(props)=>{\r\n    let {x,y,z}=props;\r\n \r\n      \r\n          if((x===y) && (y===z)){\r\n              return(<>\r\n              <div>\r\n              <h1>{x} {y} {z}</h1>\r\n              <h1>THIS IS MATCHING</h1>\r\n              </div>\r\n              </>)\r\n\r\n          }\r\n          else{\r\n            return(<>\r\n                <div>\r\n                <h1>{x} {y} {z}</h1>\r\n                <h1>THIS IS NOT MATCHING</h1>\r\n                </div>\r\n                </>)\r\n  \r\n\r\n          }\r\n      \r\n\r\n};\r\nexport default SlotM;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AACE,MAAMC,KAAK,GAAEC,KAAD,IAAS;EACnB,IAAI;IAACC,CAAD;IAAGC,CAAH;IAAKC;EAAL,IAAQH,KAAZ;;EAGM,IAAIC,CAAC,KAAGC,CAAL,IAAYA,CAAC,KAAGC,CAAnB,EAAsB;IAClB,oBAAO;MAAA,uBACP;QAAA,wBACA;UAAA,WAAKF,CAAL,OAASC,CAAT,OAAaC,CAAb;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eAEA;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFA;MAAA;QAAA;QAAA;QAAA;MAAA;IADO,iBAAP;EAOH,CARD,MASI;IACF,oBAAO;MAAA,uBACH;QAAA,wBACA;UAAA,WAAKF,CAAL,OAASC,CAAT,OAAaC,CAAb;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eAEA;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFA;MAAA;QAAA;QAAA;QAAA;MAAA;IADG,iBAAP;EAQD;AAGV,CAzBC;;KAAMJ,K;AA0BR,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}